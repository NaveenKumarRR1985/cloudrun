version: '3.8'

services:
  # Flask Application
  flask-app:
    build: ./app
    ports:
      - "8080:8080"
    environment:
      # OpenTelemetry Configuration
      - OTEL_SERVICE_NAME=flask-app
      - OTEL_SERVICE_VERSION=1.0.0
      - OTEL_RESOURCE_ATTRIBUTES=service.name=flask-app,service.version=1.0.0,deployment.environment=local
      # Send traces directly to Jaeger
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://jaeger:14268/api/traces
      - OTEL_EXPORTER_OTLP_TRACES_PROTOCOL=http/protobuf
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
      - OTEL_LOGS_EXPORTER=none
      - OTEL_PYTHON_LOG_CORRELATION=true
      - OTEL_PYTHON_LOG_LEVEL=info
      # Flask Configuration
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    volumes:
      - ./app:/app
    depends_on:
      - jaeger
    networks:
      - observability

  # Jaeger - Distributed Tracing
  jaeger:
    image: jaegertracing/all-in-one:1.50
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # HTTP collector
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - observability

  # Prometheus - Metrics Storage
  prometheus:
    image: prom/prometheus:v2.47.2
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - observability

  # Grafana - Metrics Visualization
  grafana:
    image: grafana/grafana:10.1.5
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    networks:
      - observability

networks:
  observability:
    driver: bridge